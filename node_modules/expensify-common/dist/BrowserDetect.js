"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
const Utils = __importStar(require("./utils"));
const BROWSERS = {
    EDGE: 'Edge',
    CHROME: 'Chrome',
    SAFARI: 'Safari',
    OPERA: 'Opera',
    EXPLORER: 'Explorer',
    MOZILLA: 'Mozilla',
};
const MOBILE_PLATFORMS = {
    iOS: 'iOS',
    android: 'android',
};
function searchString() {
    if (!Utils.isWindowAvailable() || !Utils.isNavigatorAvailable()) {
        return '';
    }
    const data = [
        {
            string: navigator.userAgent,
            subString: 'Edge',
            identity: BROWSERS.EDGE,
        },
        {
            string: navigator.userAgent,
            subString: 'Chrome',
            identity: BROWSERS.CHROME,
        },
        {
            string: navigator.vendor,
            subString: 'Apple',
            identity: BROWSERS.SAFARI,
        },
        {
            prop: window.opera,
            identity: BROWSERS.OPERA,
        },
        {
            string: navigator.userAgent,
            subString: 'Edge',
            identity: BROWSERS.EDGE,
        },
        {
            string: navigator.userAgent,
            subString: 'MSIE',
            identity: BROWSERS.EXPLORER,
        },
        {
            string: navigator.userAgent,
            subString: '.NET',
            identity: BROWSERS.EXPLORER,
        },
        {
            string: navigator.userAgent,
            subString: 'Gecko',
            identity: BROWSERS.MOZILLA,
        },
    ];
    let dataString;
    let dataProp;
    for (let i = 0; i < data.length; i++) {
        dataString = data[i].string;
        dataProp = data[i].prop;
        if (dataString) {
            if (dataString.indexOf(data[i].subString) !== -1) {
                return data[i].identity;
            }
        }
        else if (dataProp) {
            return data[i].identity;
        }
    }
    return '';
}
function getMobileDevice() {
    if (!Utils.isNavigatorAvailable() || !navigator.userAgent) {
        return '';
    }
    const data = [
        {
            devices: ['iPhone', 'iPad', 'iPod'],
            identity: MOBILE_PLATFORMS.iOS,
        },
        {
            devices: ['Android'],
            identity: MOBILE_PLATFORMS.android,
        },
    ];
    const dataString = navigator.userAgent;
    for (let i = 0; i < data.length; i++) {
        const { devices, identity } = data[i];
        for (let j = 0; j < devices.length; j++) {
            if (dataString.indexOf(devices[j]) !== -1) {
                return identity;
            }
        }
    }
    return '';
}
exports.default = {
    BROWSERS,
    MOBILE_PLATFORMS,
    browser: searchString(),
    mobileDevice: getMobileDevice(),
};
