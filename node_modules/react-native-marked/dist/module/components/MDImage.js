"use strict";

import React, { memo, useEffect, useState } from "react";
import { ActivityIndicator, Image, ImageBackground } from "react-native";
import { jsx as _jsx } from "react/jsx-runtime";
const MDImage = ({
  uri,
  label,
  alt = "Image",
  style
}) => {
  const [imageState, setImageState] = useState({
    isLoading: true,
    aspectRatio: undefined
  });

  /**
   * Fetches image dimension
   * Sets aspect ratio if resolved
   */
  const fetchOriginalSizeFromRemoteImage = () => {
    Image.getSize(uri, (width, height) => {
      if (width > 0 && height > 0) {
        setImageState({
          isLoading: false,
          aspectRatio: width / height
        });
      } else {
        setImageState({
          isLoading: false,
          aspectRatio: undefined
        });
      }
    }, () => {
      setImageState(current => {
        return {
          ...current,
          isLoading: false
        };
      });
    });
  };
  useEffect(() => {
    fetchOriginalSizeFromRemoteImage();
  });
  return /*#__PURE__*/_jsx(ImageBackground, {
    source: {
      uri: uri
    },
    style: {
      width: "100%",
      aspectRatio: imageState.aspectRatio
    },
    "aria-label": label,
    accessibilityRole: "image",
    accessibilityLabel: alt,
    accessibilityHint: undefined,
    imageStyle: style,
    testID: "react-native-marked-md-image",
    children: imageState.isLoading ? /*#__PURE__*/_jsx(ActivityIndicator, {
      testID: "react-native-marked-md-image-activity-indicator",
      size: "small"
    }) : null
  });
};
export default /*#__PURE__*/memo(MDImage);
//# sourceMappingURL=MDImage.js.map