"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _colors = _interopRequireDefault(require("./colors"));
var _spacing = _interopRequireDefault(require("./spacing"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const getFontStyles = mdColors => {
  return _reactNative.StyleSheet.create({
    regular: {
      fontSize: 16,
      lineHeight: 24,
      color: mdColors.text
    },
    heading: {
      fontWeight: "500",
      color: mdColors.text
    }
  });
};
const getStyles = (userStyles, colorScheme, userTheme) => {
  const mdColors = {
    ..._colors.default[colorScheme || "light"],
    ...userTheme?.colors
  };
  const mdSpacing = {
    ..._spacing.default,
    ...userTheme?.spacing
  };
  const fontStyle = getFontStyles(mdColors);
  return _reactNative.StyleSheet.create({
    em: _reactNative.StyleSheet.flatten([fontStyle.regular, {
      fontStyle: "italic"
    }, userStyles?.em]),
    strong: _reactNative.StyleSheet.flatten([fontStyle.regular, {
      fontWeight: "bold"
    }, userStyles?.strong]),
    strikethrough: _reactNative.StyleSheet.flatten([fontStyle.regular, {
      textDecorationLine: "line-through",
      textDecorationStyle: "solid"
    }, userStyles?.strikethrough]),
    text: _reactNative.StyleSheet.flatten([fontStyle.regular, userStyles?.text]),
    paragraph: _reactNative.StyleSheet.flatten([{
      paddingVertical: mdSpacing.m
    }, userStyles?.paragraph]),
    link: _reactNative.StyleSheet.flatten([fontStyle.regular, {
      fontStyle: "italic",
      color: mdColors.link
    }, userStyles?.link]),
    blockquote: _reactNative.StyleSheet.flatten([{
      borderLeftColor: mdColors.border,
      paddingLeft: mdSpacing.l,
      borderLeftWidth: mdSpacing.s,
      opacity: 0.8
    }, userStyles?.blockquote]),
    h1: _reactNative.StyleSheet.flatten([fontStyle.heading, {
      fontSize: 32,
      lineHeight: 40,
      fontWeight: "bold",
      marginVertical: mdSpacing.m,
      letterSpacing: 0,
      paddingBottom: mdSpacing.s,
      borderBottomColor: mdColors.border,
      borderBottomWidth: 1
    }, userStyles?.h1]),
    h2: _reactNative.StyleSheet.flatten([fontStyle.heading, {
      fontSize: 28,
      lineHeight: 36,
      marginVertical: mdSpacing.m,
      paddingBottom: mdSpacing.s,
      borderBottomColor: mdColors.border,
      borderBottomWidth: 1
    }, userStyles?.h2]),
    h3: _reactNative.StyleSheet.flatten([fontStyle.heading, {
      fontSize: 24,
      lineHeight: 32,
      marginVertical: mdSpacing.s
    }, userStyles?.h3]),
    h4: _reactNative.StyleSheet.flatten([fontStyle.heading, {
      fontSize: 22,
      lineHeight: 28,
      marginVertical: mdSpacing.s
    }, userStyles?.h4]),
    h5: _reactNative.StyleSheet.flatten([fontStyle.regular, fontStyle.heading, {
      marginVertical: mdSpacing.xs
    }, userStyles?.h5]),
    h6: _reactNative.StyleSheet.flatten([fontStyle.heading, {
      fontSize: 14,
      lineHeight: 20,
      marginVertical: mdSpacing.xs
    }, userStyles?.h6]),
    codespan: _reactNative.StyleSheet.flatten([fontStyle.regular, {
      fontStyle: "italic",
      backgroundColor: mdColors.code,
      fontWeight: "300"
    }, userStyles?.codespan]),
    code: _reactNative.StyleSheet.flatten([{
      padding: mdSpacing.l,
      backgroundColor: mdColors.code,
      minWidth: "100%"
    }, userStyles?.code]),
    hr: _reactNative.StyleSheet.flatten([{
      borderBottomWidth: 1,
      borderBottomColor: mdColors.border,
      marginVertical: mdSpacing.s
    }, userStyles?.hr]),
    list: _reactNative.StyleSheet.flatten([userStyles?.list]),
    li: _reactNative.StyleSheet.flatten([fontStyle.regular, {
      flexShrink: 1
    }, userStyles?.li]),
    image: _reactNative.StyleSheet.flatten([{
      resizeMode: "cover"
    }, userStyles?.image]),
    table: _reactNative.StyleSheet.flatten([{
      borderWidth: 1,
      borderColor: mdColors.border
    }, userStyles?.table]),
    tableRow: _reactNative.StyleSheet.flatten([{
      flexDirection: "row"
    }, userStyles?.tableRow]),
    tableCell: _reactNative.StyleSheet.flatten([{
      padding: mdSpacing.s
    }, userStyles?.tableCell])
  });
};
var _default = exports.default = getStyles;
//# sourceMappingURL=styles.js.map