"use strict";

import React, { memo, useEffect, useRef, useState } from "react";
import { ActivityIndicator, View } from "react-native";
import { SvgFromXml } from "react-native-svg";
import { getSvgDimensions } from "./../utils/svg";
import { jsx as _jsx } from "react/jsx-runtime";
const MDSvg = ({
  uri,
  alt = "image"
}) => {
  const isFirstLoad = useRef(false);
  const [layoutWidth, setLayoutWidth] = useState(0);
  const [svgState, setSvgState] = useState({
    viewBox: "",
    width: 0,
    height: 0,
    svg: "",
    isLoading: true,
    error: false,
    aspectRatio: undefined
  });
  useEffect(() => {
    const fetchSvg = async () => {
      try {
        const res = await fetch(uri);
        const text = await res.text();
        if (res.status !== 200) {
          throw new Error("Status is not 200");
        }
        const {
          viewBox,
          width,
          height
        } = getSvgDimensions(text);
        setSvgState({
          width,
          height,
          viewBox,
          svg: text,
          isLoading: false,
          error: false,
          aspectRatio: width / height
        });
      } catch (_e) {
        setSvgState(state => ({
          ...state,
          error: true,
          isLoading: false
        }));
      }
    };
    fetchSvg();
  }, [uri]);
  const onLayout = event => {
    if (!isFirstLoad.current) {
      setLayoutWidth(event.nativeEvent.layout.width ?? 0);
      isFirstLoad.current = true;
    }
  };
  const getWidth = () => {
    if (layoutWidth && svgState.width) {
      return Math.min(layoutWidth, svgState.width);
    }
    return "100%";
  };
  return /*#__PURE__*/_jsx(View, {
    style: {
      width: getWidth(),
      aspectRatio: svgState.aspectRatio
    },
    onLayout: onLayout,
    children: svgState.isLoading ? /*#__PURE__*/_jsx(ActivityIndicator, {
      size: "small"
    }) : /*#__PURE__*/_jsx(SvgFromXml, {
      xml: svgState.svg,
      width: "100%",
      height: "100%",
      viewBox: svgState.viewBox,
      "aria-label": alt,
      accessibilityRole: "image",
      accessibilityLabel: alt,
      accessibilityHint: undefined,
      testID: "react-native-marked-md-svg"
    })
  });
};
export default /*#__PURE__*/memo(MDSvg);
//# sourceMappingURL=MDSvg.js.map