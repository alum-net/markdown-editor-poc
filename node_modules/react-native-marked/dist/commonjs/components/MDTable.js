"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimatedTable = require("react-native-reanimated-table");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const MDTable = ({
  header,
  rows,
  widthArr,
  cellStyle,
  rowStyle,
  tableStyle,
  borderColor,
  borderWidth
}) => {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
    horizontal: true,
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeReanimatedTable.Table, {
      borderStyle: {
        borderColor,
        borderWidth
      },
      style: tableStyle,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimatedTable.TableWrapper, {
        style: rowStyle,
        children: header.map((headerCol, index) => {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimatedTable.Cell, {
            width: widthArr[index],
            data: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
              style: cellStyle,
              children: headerCol
            })
          }, `${index}`);
        })
      }), rows.map((rowData, index) => {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimatedTable.TableWrapper, {
          style: rowStyle,
          children: rowData.map((cellData, cellIndex) => {
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimatedTable.Cell, {
              width: widthArr[cellIndex],
              data: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
                style: cellStyle,
                children: cellData
              })
            }, `${cellIndex}`);
          })
        }, `${index}`);
      })]
    })
  });
};
var _default = exports.default = /*#__PURE__*/(0, _react.memo)(MDTable);
//# sourceMappingURL=MDTable.js.map