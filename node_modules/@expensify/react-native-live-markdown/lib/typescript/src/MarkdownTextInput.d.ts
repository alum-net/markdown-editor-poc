import { TextInput } from 'react-native';
import React from 'react';
import type { TextInputProps } from 'react-native';
import type { WorkletRuntime } from 'react-native-reanimated';
import type { ShareableRef, WorkletFunction } from 'react-native-reanimated/lib/typescript/commonTypes';
import type { PartialMarkdownStyle } from './styleUtils';
import type { InlineImagesInputProps, MarkdownRange } from './commonTypes';
declare global {
    var jsi_setMarkdownRuntime: (runtime: WorkletRuntime) => void;
    var jsi_registerMarkdownWorklet: (shareableWorklet: ShareableRef<WorkletFunction<[string], MarkdownRange[]>>) => number;
    var jsi_unregisterMarkdownWorklet: (parserId: number) => void;
}
declare function getWorkletRuntime(): WorkletRuntime;
interface MarkdownTextInputProps extends TextInputProps, InlineImagesInputProps {
    markdownStyle?: PartialMarkdownStyle;
    formatSelection?: (text: string, selectionStart: number, selectionEnd: number, formatCommand: string) => FormatSelectionResult;
    parser: (value: string) => MarkdownRange[];
}
type FormatSelectionResult = {
    updatedText: string;
    cursorOffset: number;
};
type MarkdownTextInput = TextInput & React.Component<MarkdownTextInputProps>;
declare const MarkdownTextInput: React.ForwardRefExoticComponent<MarkdownTextInputProps & React.RefAttributes<MarkdownTextInput>>;
export type { PartialMarkdownStyle as MarkdownStyle, MarkdownTextInputProps };
export default MarkdownTextInput;
export { getWorkletRuntime };
//# sourceMappingURL=MarkdownTextInput.d.ts.map