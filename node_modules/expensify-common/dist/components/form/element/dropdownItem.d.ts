export default DropDownItem;
declare class DropDownItem extends React.Component<any, any, any> {
    constructor(props: any);
    /**
     * Only instantiate the tooltip this dropdown item contains
     */
    createTooltip(): void;
    hasInstantiatedTooltip: boolean;
    componentWillUnmount(): void;
    /**
     * If there is an instantiated tooltip on the component, destroy it
     */
    destroyTooltip(): void;
    render(): React.JSX.Element;
    tooltipContainer: JQueryStatic | undefined;
}
declare namespace DropDownItem {
    export { propTypes };
    export { defaultProps };
}
import React from 'react';
declare namespace propTypes {
    let onClick: PropTypes.Validator<(...args: any[]) => any>;
    let value: PropTypes.Validator<any>;
    let text: PropTypes.Requireable<string>;
    let children: PropTypes.Requireable<PropTypes.ReactElementLike>;
    let disabled: PropTypes.Requireable<boolean>;
    let focused: PropTypes.Requireable<boolean>;
    let isSelected: PropTypes.Requireable<boolean>;
    let isSelectable: PropTypes.Requireable<boolean>;
    let divider: PropTypes.Requireable<boolean>;
    let bs4: PropTypes.Requireable<boolean>;
    let extraClasses: PropTypes.Requireable<NonNullable<string | object | null | undefined>>;
}
declare namespace defaultProps {
    let text_1: string;
    export { text_1 as text };
    let children_1: null;
    export { children_1 as children };
    let disabled_1: boolean;
    export { disabled_1 as disabled };
    let focused_1: boolean;
    export { focused_1 as focused };
    let isSelected_1: boolean;
    export { isSelected_1 as isSelected };
    let isSelectable_1: boolean;
    export { isSelectable_1 as isSelectable };
    let divider_1: boolean;
    export { divider_1 as divider };
    let bs4_1: boolean;
    export { bs4_1 as bs4 };
    let extraClasses_1: never[];
    export { extraClasses_1 as extraClasses };
}
import PropTypes from 'prop-types';
