export default class ExpenseRule {
    /**
     * Creates a new instance of this class.
     *
     * @param {Object|Array} ruleArray
     */
    constructor(ruleArray: Object | any[]);
    /**
     * Returns the applyWhen array associated with the passed field
     * i.e. field == category returns [field: 'category', condition: 'matches', value: 'car']
     *
     * @param {string} field
     *
     * @return {Object}
     */
    getApplyWhenByField(field: string): Object;
    /**
     * Get the externalID saved deep in the tax field
     *
     * @returns {String}
     */
    getExternalTaxID(): string;
    /**
     * Checks if the passed expense matches this expense rule
     *
     * @param {SExpense3} expense
     * @returns {boolean}
     */
    isMatch(expense: SExpense3): boolean;
    /**
     * Checks the passed value against the actual based on what the condition (matches, greater, less than, etc.)
     *
     * @param {string} condition
     * @param {Mixed} ruleValue
     * @param {Mixed} transactionValue
     * @returns {boolean}
     */
    checkCondition(condition: string, ruleValue: Mixed, transactionValue: Mixed): boolean;
}
