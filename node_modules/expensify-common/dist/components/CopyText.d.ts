export default CopyText;
/**
 * Simple render prop component that encapsulates the Clipboard feature and exposes a function that can be tied to any event
 *
 * @example
 *
 * <React.c.CopyText textContent="I am some text" onSuccess={() => {}}>
 *    {copy => (
 *        <React.c.Button onClick={copy}>
 *            Copy Me!
 *        </React.c.Button>
 *     )}
 * </React.c.CopyText>
 */
declare class CopyText extends React.Component<any, any, any> {
    constructor(props: any);
    constructor(props: any, context: any);
    componentDidMount(): void;
    hiddenLink: HTMLAnchorElement | undefined;
    clipboard: Clipboard | undefined;
    componentWillUnmount(): void;
    /**
     * Fires click event on invisible link
     */
    copyTextToClipboard(): void;
    render(): any;
}
declare namespace CopyText {
    export { propTypes };
    export { defaultProps };
}
import React from 'react';
import Clipboard from 'clipboard';
declare namespace propTypes {
    let onSuccess: PropTypes.Requireable<(...args: any[]) => any>;
    let textContent: PropTypes.Requireable<string>;
    let children: PropTypes.Validator<(...args: any[]) => any>;
}
declare namespace defaultProps {
    export function onSuccess_1(): void;
    export { onSuccess_1 as onSuccess };
    let textContent_1: string;
    export { textContent_1 as textContent };
}
import PropTypes from 'prop-types';
