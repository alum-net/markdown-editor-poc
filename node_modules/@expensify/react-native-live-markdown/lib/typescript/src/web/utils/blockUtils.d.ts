import type { InlineImagesInputProps, MarkdownRange } from '../../commonTypes';
import type { MarkdownTextInputElement } from '../../MarkdownTextInput.web';
import type { PartialMarkdownStyle } from '../../styleUtils';
import type { NodeType, TreeNode } from './treeUtils';
declare function addStyleToBlock(targetElement: HTMLElement, type: NodeType, markdownStyle: PartialMarkdownStyle, isMultiline?: boolean): void;
declare const MULTILINE_MARKDOWN_TYPES: string[];
declare function isBlockMarkdownType(type: NodeType): boolean;
declare function isMultilineMarkdownType(type: NodeType): boolean;
declare function getFirstBlockMarkdownRange(ranges: MarkdownRange[]): MarkdownRange | undefined;
declare function extendBlockStructure(currentInput: MarkdownTextInputElement, targetNode: TreeNode, currentRange: MarkdownRange, ranges: MarkdownRange[], text: string, markdownStyle: PartialMarkdownStyle, inlineImagesProps: InlineImagesInputProps): TreeNode;
declare function isChildOfMarkdownElement(node: HTMLElement, elementType: NodeType): boolean;
declare function isChildOfMultilineMarkdownElement(node: HTMLElement): boolean;
export { addStyleToBlock, extendBlockStructure, isBlockMarkdownType, isMultilineMarkdownType, getFirstBlockMarkdownRange, isChildOfMarkdownElement, isChildOfMultilineMarkdownElement, MULTILINE_MARKDOWN_TYPES, };
//# sourceMappingURL=blockUtils.d.ts.map