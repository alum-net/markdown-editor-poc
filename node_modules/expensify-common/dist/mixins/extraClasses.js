"use strict";
/* global React */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This mixin adds the ability to specify an `extraClasses` property
 * on a component that is added to any default classes that the component uses.
 * It keeps these classes in the state so that they can be dynamically changed
 * if needed.
 *
 * The `extraClasses` property should be an array containing elements
 * for each class to add to the component.
 *
 * Usage:
 * // Use the mixin in a component
 * React.registerComponent(['div'], {
 *     mixins: [React.m.ExtraClasses)],
 *     render() { return <div className={this.state.classes} />; }
 * });
 *
 * // Using that component
 * render() {
 *     let Div = React.c(['div']);
 *     return <Div extraClasses={['large', 'primary']} />;
 * }
 */
const Utils = __importStar(require("../utils"));
exports.default = {
    propTypes: {
        extraClasses: Utils.isWindowAvailable() && window.PropTypes.oneOfType([window.PropTypes.string, window.PropTypes.array, window.PropTypes.object]),
    },
    UNSAFE_componentWillReceiveProps(nextProps) {
        this.setState({ classes: React.classNames(this.defaultClasses || [], nextProps.extraClasses) });
    },
    getInitialState() {
        return {
            classes: React.classNames(this.defaultClasses || [], this.props.extraClasses),
        };
    },
};
